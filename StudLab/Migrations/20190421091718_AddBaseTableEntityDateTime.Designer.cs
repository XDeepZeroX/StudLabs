// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StudLab.Data;

namespace StudLab.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190421091718_AddBaseTableEntityDateTime")]
    partial class AddBaseTableEntityDateTime
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("StudLab.Model.TableTransportTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AVector");

                    b.Property<string>("BVector");

                    b.Property<DateTime>("Date");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("NumColumn");

                    b.Property<int>("NumRow");

                    b.Property<string>("Table");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("StudLab.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EmailUser");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("Id");

                    b.ToTable("Transports");
                });

            modelBuilder.Entity("StudLab.Model.TableTransportTask", b =>
                {
                    b.HasOne("StudLab.Model.User", "User")
                        .WithMany("TransportTables")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
